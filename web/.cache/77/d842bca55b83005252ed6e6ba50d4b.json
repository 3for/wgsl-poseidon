{"id":"node_modules/wasmcurves/src/build_f1.js","dependencies":[{"name":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\package.json","includedInParent":true,"mtime":1689951799157},{"name":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\node_modules\\wasmcurves\\package.json","includedInParent":true,"mtime":1689950336007},{"name":"./build_f1m.js","loc":{"line":20,"column":24,"index":781},"parent":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\node_modules\\wasmcurves\\src\\build_f1.js","resolved":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\node_modules\\wasmcurves\\src\\build_f1m.js"},{"name":"./bigint.js","loc":{"line":21,"column":30,"index":830},"parent":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\node_modules\\wasmcurves\\src\\build_f1.js","resolved":"D:\\zkp\\webgpu\\wgsl-poseidon\\web\\node_modules\\wasmcurves\\src\\bigint.js"}],"generated":{"js":"/*\n    Copyright 2019 0KIMS association.\n\n    This file is part of wasmsnark (Web Assembly zkSnark Prover).\n\n    wasmsnark is a free software: you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    wasmsnark is distributed in the hope that it will be useful, but WITHOUT\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n    License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with wasmsnark. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nconst buildF1m =require(\"./build_f1m.js\");\nconst { bitLength } = require(\"./bigint.js\");\n\nmodule.exports = function buildF1(module, _q, _prefix, _f1mPrefix, _intPrefix) {\n\n    const q = BigInt(_q);\n    const n64 = Math.floor((bitLength(q - 1n) - 1)/64) +1;\n    const n8 = n64*8;\n\n    const prefix = _prefix || \"f1\";\n    if (module.modules[prefix]) return prefix;  // already builded\n    module.modules[prefix] = {\n        n64: n64\n    };\n\n    const intPrefix = _intPrefix || \"int\";\n    const f1mPrefix = buildF1m(module, q, _f1mPrefix, intPrefix);\n\n\n    const pR2 =     module.modules[f1mPrefix].pR2;\n    const pq =     module.modules[f1mPrefix].pq;\n    const pePlusOne = module.modules[f1mPrefix].pePlusOne;\n\n    function buildMul() {\n        const pAux1 = module.alloc(n8);\n\n        const f = module.addFunction(prefix+ \"_mul\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"y\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n        f.addCode(c.call(f1mPrefix + \"_mul\", c.getLocal(\"x\"), c.getLocal(\"y\"), c.i32_const(pAux1)));\n        f.addCode(c.call(f1mPrefix + \"_mul\", c.i32_const(pAux1), c.i32_const(pR2), c.getLocal(\"r\")));\n    }\n\n    function buildSquare() {\n        const f = module.addFunction(prefix+\"_square\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n\n        f.addCode(c.call(prefix + \"_mul\", c.getLocal(\"x\"), c.getLocal(\"x\"), c.getLocal(\"r\")));\n    }\n\n\n    function buildInverse() {\n\n        const f = module.addFunction(prefix+ \"_inverse\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n        f.addCode(c.call(intPrefix + \"_inverseMod\", c.getLocal(\"x\"), c.i32_const(pq), c.getLocal(\"r\")));\n    }\n\n    function buildIsNegative() {\n        const f = module.addFunction(prefix+\"_isNegative\");\n        f.addParam(\"x\", \"i32\");\n        f.setReturnType(\"i32\");\n\n        const c = f.getCodeBuilder();\n\n        f.addCode(\n            c.call(intPrefix + \"_gte\", c.getLocal(\"x\"), c.i32_const(pePlusOne) )\n        );\n    }\n\n\n    buildMul();\n    buildSquare();\n    buildInverse();\n    buildIsNegative();\n    module.exportFunction(f1mPrefix + \"_add\", prefix + \"_add\");\n    module.exportFunction(f1mPrefix + \"_sub\", prefix + \"_sub\");\n    module.exportFunction(f1mPrefix + \"_neg\", prefix + \"_neg\");\n    module.exportFunction(prefix + \"_mul\");\n    module.exportFunction(prefix + \"_square\");\n    module.exportFunction(prefix + \"_inverse\");\n    module.exportFunction(prefix + \"_isNegative\");\n    module.exportFunction(f1mPrefix + \"_copy\", prefix+\"_copy\");\n    module.exportFunction(f1mPrefix + \"_zero\", prefix+\"_zero\");\n    module.exportFunction(f1mPrefix + \"_one\", prefix+\"_one\");\n    module.exportFunction(f1mPrefix + \"_isZero\", prefix+\"_isZero\");\n    module.exportFunction(f1mPrefix + \"_eq\", prefix+\"_eq\");\n\n    return prefix;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/wasmcurves/src/build_f1.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}}],"sources":{"node_modules/wasmcurves/src/build_f1.js":"/*\n    Copyright 2019 0KIMS association.\n\n    This file is part of wasmsnark (Web Assembly zkSnark Prover).\n\n    wasmsnark is a free software: you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    wasmsnark is distributed in the hope that it will be useful, but WITHOUT\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public\n    License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with wasmsnark. If not, see <https://www.gnu.org/licenses/>.\n*/\n\nconst buildF1m =require(\"./build_f1m.js\");\nconst { bitLength } = require(\"./bigint.js\");\n\nmodule.exports = function buildF1(module, _q, _prefix, _f1mPrefix, _intPrefix) {\n\n    const q = BigInt(_q);\n    const n64 = Math.floor((bitLength(q - 1n) - 1)/64) +1;\n    const n8 = n64*8;\n\n    const prefix = _prefix || \"f1\";\n    if (module.modules[prefix]) return prefix;  // already builded\n    module.modules[prefix] = {\n        n64: n64\n    };\n\n    const intPrefix = _intPrefix || \"int\";\n    const f1mPrefix = buildF1m(module, q, _f1mPrefix, intPrefix);\n\n\n    const pR2 =     module.modules[f1mPrefix].pR2;\n    const pq =     module.modules[f1mPrefix].pq;\n    const pePlusOne = module.modules[f1mPrefix].pePlusOne;\n\n    function buildMul() {\n        const pAux1 = module.alloc(n8);\n\n        const f = module.addFunction(prefix+ \"_mul\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"y\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n        f.addCode(c.call(f1mPrefix + \"_mul\", c.getLocal(\"x\"), c.getLocal(\"y\"), c.i32_const(pAux1)));\n        f.addCode(c.call(f1mPrefix + \"_mul\", c.i32_const(pAux1), c.i32_const(pR2), c.getLocal(\"r\")));\n    }\n\n    function buildSquare() {\n        const f = module.addFunction(prefix+\"_square\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n\n        f.addCode(c.call(prefix + \"_mul\", c.getLocal(\"x\"), c.getLocal(\"x\"), c.getLocal(\"r\")));\n    }\n\n\n    function buildInverse() {\n\n        const f = module.addFunction(prefix+ \"_inverse\");\n        f.addParam(\"x\", \"i32\");\n        f.addParam(\"r\", \"i32\");\n\n        const c = f.getCodeBuilder();\n        f.addCode(c.call(intPrefix + \"_inverseMod\", c.getLocal(\"x\"), c.i32_const(pq), c.getLocal(\"r\")));\n    }\n\n    function buildIsNegative() {\n        const f = module.addFunction(prefix+\"_isNegative\");\n        f.addParam(\"x\", \"i32\");\n        f.setReturnType(\"i32\");\n\n        const c = f.getCodeBuilder();\n\n        f.addCode(\n            c.call(intPrefix + \"_gte\", c.getLocal(\"x\"), c.i32_const(pePlusOne) )\n        );\n    }\n\n\n    buildMul();\n    buildSquare();\n    buildInverse();\n    buildIsNegative();\n    module.exportFunction(f1mPrefix + \"_add\", prefix + \"_add\");\n    module.exportFunction(f1mPrefix + \"_sub\", prefix + \"_sub\");\n    module.exportFunction(f1mPrefix + \"_neg\", prefix + \"_neg\");\n    module.exportFunction(prefix + \"_mul\");\n    module.exportFunction(prefix + \"_square\");\n    module.exportFunction(prefix + \"_inverse\");\n    module.exportFunction(prefix + \"_isNegative\");\n    module.exportFunction(f1mPrefix + \"_copy\", prefix+\"_copy\");\n    module.exportFunction(f1mPrefix + \"_zero\", prefix+\"_zero\");\n    module.exportFunction(f1mPrefix + \"_one\", prefix+\"_one\");\n    module.exportFunction(f1mPrefix + \"_isZero\", prefix+\"_isZero\");\n    module.exportFunction(f1mPrefix + \"_eq\", prefix+\"_eq\");\n\n    return prefix;\n};\n"},"lineCount":109}},"error":null,"hash":"ca76f8ec0482497db0d3a4621da18c7c","cacheData":{"env":{}}}